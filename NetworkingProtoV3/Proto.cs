// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: my.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetworkingProtoV3
{

    /// <summary>Holder for reflection information generated from my.proto</summary>
    public static partial class MyReflection
    {

        #region Descriptor
        /// <summary>File descriptor for my.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static MyReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CghteS5wcm90bxIRTmV0d29ya2luZ1Byb3RvVjMiQwoEU2FsZRISCgpfYnV5",
                  "ZXJOYW1lGAEgASgJEhYKDl90aWNrZXRzQm91Z2h0GAIgASgFEg8KB19zaG93",
                  "SWQYAyABKAUiiAEKBFNob3cSCgoCaWQYASABKAUSEwoLX2FydGlzdE5hbWUY",
                  "AiABKAkSEQoJX3Nob3dOYW1lGAMgASgJEhAKCF9hZGRyZXNzGAQgASgJEg0K",
                  "BV90aW1lGAUgASgJEhcKD19hdmFpbGFibGVTZWF0cxgGIAEoBRISCgpfc29s",
                  "ZFNlYXRzGAcgASgFIioKBFVzZXISEAoIdXNlcm5hbWUYASABKAkSEAoIcGFz",
                  "c3dvcmQYAiABKAki9AEKBkFuc3dlchIsCgR0eXBlGAEgASgOMh4uTmV0d29y",
                  "a2luZ1Byb3RvVjMuQW5zd2VyLlR5cGUSDQoFZXJyb3IYAiABKAkSJgoFc2hv",
                  "d3MYAyADKAsyFy5OZXR3b3JraW5nUHJvdG9WMy5TaG93IoQBCgRUeXBlEgsK",
                  "B1Vua25vd24QABIJCgVFcnJvchABEgYKAk9LEAISEAoMRnVsbFNob3dMaXN0",
                  "EAMSFwoTRHluYW1pY0Z1bGxTaG93TGlzdBAEEhQKEEZpbHRlcmVkU2hvd0xp",
                  "c3QQBRIbChdEeW5hbWljRmlsdGVyZWRTaG93TGlzdBAGIp4CCgdSZXF1ZXN0",
                  "Ei0KBHR5cGUYASABKA4yHy5OZXR3b3JraW5nUHJvdG9WMy5SZXF1ZXN0LlR5",
                  "cGUSJwoEdXNlchgCIAEoCzIXLk5ldHdvcmtpbmdQcm90b1YzLlVzZXJIABIS",
                  "Cgh1c2VybmFtZRgDIAEoCUgAEhIKCGRhdGV0aW1lGAQgASgJSAASJwoEc2Fs",
                  "ZRgFIAEoCzIXLk5ldHdvcmtpbmdQcm90b1YzLlNhbGVIACJfCgRUeXBlEgsK",
                  "B1Vua25vd24QABIJCgVMb2dpbhABEgoKBkxvZ291dBACEhAKDEZ1bGxTaG93",
                  "TGlzdBADEhQKEEZpbHRlcmVkU2hvd0xpc3QQBBILCgdBZGRTYWxlEAVCCQoH",
                  "cGF5bG9hZGIGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingProtoV3.Sale), global::NetworkingProtoV3.Sale.Parser, new[]{ "BuyerName", "TicketsBought", "ShowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingProtoV3.Show), global::NetworkingProtoV3.Show.Parser, new[]{ "Id", "ArtistName", "ShowName", "Address", "Time", "AvailableSeats", "SoldSeats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingProtoV3.User), global::NetworkingProtoV3.User.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingProtoV3.Answer), global::NetworkingProtoV3.Answer.Parser, new[]{ "Type", "Error", "Shows" }, null, new[]{ typeof(global::NetworkingProtoV3.Answer.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingProtoV3.Request), global::NetworkingProtoV3.Request.Parser, new[]{ "Type", "User", "Username", "Datetime", "Sale" }, new[]{ "Payload" }, new[]{ typeof(global::NetworkingProtoV3.Request.Types.Type) }, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class Sale : pb::IMessage<Sale>
    {
        private static readonly pb::MessageParser<Sale> _parser = new pb::MessageParser<Sale>(() => new Sale());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Sale> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::NetworkingProtoV3.MyReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sale()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sale(Sale other) : this()
        {
            BuyerName_ = other.BuyerName_;
            TicketsBought_ = other.TicketsBought_;
            ShowId_ = other.ShowId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Sale Clone()
        {
            return new Sale(this);
        }

        /// <summary>Field number for the "_buyerName" field.</summary>
        public const int BuyerNameFieldNumber = 1;
        private string BuyerName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BuyerName
        {
            get { return BuyerName_; }
            set
            {
                BuyerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "_ticketsBought" field.</summary>
        public const int TicketsBoughtFieldNumber = 2;
        private int TicketsBought_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TicketsBought
        {
            get { return TicketsBought_; }
            set
            {
                TicketsBought_ = value;
            }
        }

        /// <summary>Field number for the "_showId" field.</summary>
        public const int ShowIdFieldNumber = 3;
        private int ShowId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ShowId
        {
            get { return ShowId_; }
            set
            {
                ShowId_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Sale);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Sale other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (BuyerName != other.BuyerName) return false;
            if (TicketsBought != other.TicketsBought) return false;
            if (ShowId != other.ShowId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (BuyerName.Length != 0) hash ^= BuyerName.GetHashCode();
            if (TicketsBought != 0) hash ^= TicketsBought.GetHashCode();
            if (ShowId != 0) hash ^= ShowId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (BuyerName.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(BuyerName);
            }
            if (TicketsBought != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(TicketsBought);
            }
            if (ShowId != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(ShowId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (BuyerName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(BuyerName);
            }
            if (TicketsBought != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TicketsBought);
            }
            if (ShowId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Sale other)
        {
            if (other == null)
            {
                return;
            }
            if (other.BuyerName.Length != 0)
            {
                BuyerName = other.BuyerName;
            }
            if (other.TicketsBought != 0)
            {
                TicketsBought = other.TicketsBought;
            }
            if (other.ShowId != 0)
            {
                ShowId = other.ShowId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            BuyerName = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            TicketsBought = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            ShowId = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Show : pb::IMessage<Show>
    {
        private static readonly pb::MessageParser<Show> _parser = new pb::MessageParser<Show>(() => new Show());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Show> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::NetworkingProtoV3.MyReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Show()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Show(Show other) : this()
        {
            id_ = other.id_;
            ArtistName_ = other.ArtistName_;
            ShowName_ = other.ShowName_;
            Address_ = other.Address_;
            Time_ = other.Time_;
            AvailableSeats_ = other.AvailableSeats_;
            SoldSeats_ = other.SoldSeats_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Show Clone()
        {
            return new Show(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "_artistName" field.</summary>
        public const int ArtistNameFieldNumber = 2;
        private string ArtistName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ArtistName
        {
            get { return ArtistName_; }
            set
            {
                ArtistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "_showName" field.</summary>
        public const int ShowNameFieldNumber = 3;
        private string ShowName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShowName
        {
            get { return ShowName_; }
            set
            {
                ShowName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "_address" field.</summary>
        public const int AddressFieldNumber = 4;
        private string Address_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address
        {
            get { return Address_; }
            set
            {
                Address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "_time" field.</summary>
        public const int TimeFieldNumber = 5;
        private string Time_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Time
        {
            get { return Time_; }
            set
            {
                Time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "_availableSeats" field.</summary>
        public const int AvailableSeatsFieldNumber = 6;
        private int AvailableSeats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AvailableSeats
        {
            get { return AvailableSeats_; }
            set
            {
                AvailableSeats_ = value;
            }
        }

        /// <summary>Field number for the "_soldSeats" field.</summary>
        public const int SoldSeatsFieldNumber = 7;
        private int SoldSeats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SoldSeats
        {
            get { return SoldSeats_; }
            set
            {
                SoldSeats_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Show);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Show other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (ArtistName != other.ArtistName) return false;
            if (ShowName != other.ShowName) return false;
            if (Address != other.Address) return false;
            if (Time != other.Time) return false;
            if (AvailableSeats != other.AvailableSeats) return false;
            if (SoldSeats != other.SoldSeats) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0) hash ^= Id.GetHashCode();
            if (ArtistName.Length != 0) hash ^= ArtistName.GetHashCode();
            if (ShowName.Length != 0) hash ^= ShowName.GetHashCode();
            if (Address.Length != 0) hash ^= Address.GetHashCode();
            if (Time.Length != 0) hash ^= Time.GetHashCode();
            if (AvailableSeats != 0) hash ^= AvailableSeats.GetHashCode();
            if (SoldSeats != 0) hash ^= SoldSeats.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Id);
            }
            if (ArtistName.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(ArtistName);
            }
            if (ShowName.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(ShowName);
            }
            if (Address.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Address);
            }
            if (Time.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(Time);
            }
            if (AvailableSeats != 0)
            {
                output.WriteRawTag(48);
                output.WriteInt32(AvailableSeats);
            }
            if (SoldSeats != 0)
            {
                output.WriteRawTag(56);
                output.WriteInt32(SoldSeats);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
            }
            if (ArtistName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtistName);
            }
            if (ShowName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowName);
            }
            if (Address.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
            }
            if (Time.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
            }
            if (AvailableSeats != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableSeats);
            }
            if (SoldSeats != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoldSeats);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Show other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0)
            {
                Id = other.Id;
            }
            if (other.ArtistName.Length != 0)
            {
                ArtistName = other.ArtistName;
            }
            if (other.ShowName.Length != 0)
            {
                ShowName = other.ShowName;
            }
            if (other.Address.Length != 0)
            {
                Address = other.Address;
            }
            if (other.Time.Length != 0)
            {
                Time = other.Time;
            }
            if (other.AvailableSeats != 0)
            {
                AvailableSeats = other.AvailableSeats;
            }
            if (other.SoldSeats != 0)
            {
                SoldSeats = other.SoldSeats;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Id = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            ArtistName = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            ShowName = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            Address = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            Time = input.ReadString();
                            break;
                        }
                    case 48:
                        {
                            AvailableSeats = input.ReadInt32();
                            break;
                        }
                    case 56:
                        {
                            SoldSeats = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class User : pb::IMessage<User>
    {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::NetworkingProtoV3.MyReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User(User other) : this()
        {
            username_ = other.username_;
            password_ = other.password_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User Clone()
        {
            return new User(this);
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 1;
        private string username_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username
        {
            get { return username_; }
            set
            {
                username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 2;
        private string password_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Password
        {
            get { return password_; }
            set
            {
                password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(User other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Username != other.Username) return false;
            if (Password != other.Password) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Username.Length != 0) hash ^= Username.GetHashCode();
            if (Password.Length != 0) hash ^= Password.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Username.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Username);
            }
            if (Password.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Password);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Username.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
            }
            if (Password.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(User other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Username.Length != 0)
            {
                Username = other.Username;
            }
            if (other.Password.Length != 0)
            {
                Password = other.Password;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Username = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Password = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Answer : pb::IMessage<Answer>
    {
        private static readonly pb::MessageParser<Answer> _parser = new pb::MessageParser<Answer>(() => new Answer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Answer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::NetworkingProtoV3.MyReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer(Answer other) : this()
        {
            type_ = other.type_;
            error_ = other.error_;
            shows_ = other.shows_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Answer Clone()
        {
            return new Answer(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::NetworkingProtoV3.Answer.Types.Type type_ = global::NetworkingProtoV3.Answer.Types.Type.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NetworkingProtoV3.Answer.Types.Type Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 2;
        private string error_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Error
        {
            get { return error_; }
            set
            {
                error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "shows" field.</summary>
        public const int ShowsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::NetworkingProtoV3.Show> _repeated_shows_codec
            = pb::FieldCodec.ForMessage(26, global::NetworkingProtoV3.Show.Parser);
        private readonly pbc::RepeatedField<global::NetworkingProtoV3.Show> shows_ = new pbc::RepeatedField<global::NetworkingProtoV3.Show>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::NetworkingProtoV3.Show> Shows
        {
            get { return shows_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Answer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Answer other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            if (Error != other.Error) return false;
            if (!shows_.Equals(other.shows_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != global::NetworkingProtoV3.Answer.Types.Type.Unknown) hash ^= Type.GetHashCode();
            if (Error.Length != 0) hash ^= Error.GetHashCode();
            hash ^= shows_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != global::NetworkingProtoV3.Answer.Types.Type.Unknown)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (Error.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Error);
            }
            shows_.WriteTo(output, _repeated_shows_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != global::NetworkingProtoV3.Answer.Types.Type.Unknown)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (Error.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
            }
            size += shows_.CalculateSize(_repeated_shows_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Answer other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != global::NetworkingProtoV3.Answer.Types.Type.Unknown)
            {
                Type = other.Type;
            }
            if (other.Error.Length != 0)
            {
                Error = other.Error;
            }
            shows_.Add(other.shows_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Type = (global::NetworkingProtoV3.Answer.Types.Type)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            Error = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            shows_.AddEntriesFrom(input, _repeated_shows_codec);
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Answer message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("Unknown")] Unknown = 0,
                [pbr::OriginalName("Error")] Error = 1,
                [pbr::OriginalName("OK")] Ok = 2,
                [pbr::OriginalName("FullShowList")] FullShowList = 3,
                [pbr::OriginalName("DynamicFullShowList")] DynamicFullShowList = 4,
                [pbr::OriginalName("FilteredShowList")] FilteredShowList = 5,
                [pbr::OriginalName("DynamicFilteredShowList")] DynamicFilteredShowList = 6,
            }

        }
        #endregion

    }

    public sealed partial class Request : pb::IMessage<Request>
    {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::NetworkingProtoV3.MyReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this()
        {
            type_ = other.type_;
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.User:
                    User = other.User.Clone();
                    break;
                case PayloadOneofCase.Username:
                    Username = other.Username;
                    break;
                case PayloadOneofCase.Datetime:
                    Datetime = other.Datetime;
                    break;
                case PayloadOneofCase.Sale:
                    Sale = other.Sale.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone()
        {
            return new Request(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::NetworkingProtoV3.Request.Types.Type type_ = global::NetworkingProtoV3.Request.Types.Type.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NetworkingProtoV3.Request.Types.Type Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NetworkingProtoV3.User User
        {
            get { return payloadCase_ == PayloadOneofCase.User ? (global::NetworkingProtoV3.User)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.User;
            }
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username
        {
            get { return payloadCase_ == PayloadOneofCase.Username ? (string)payload_ : ""; }
            set
            {
                payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                payloadCase_ = PayloadOneofCase.Username;
            }
        }

        /// <summary>Field number for the "datetime" field.</summary>
        public const int DatetimeFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Datetime
        {
            get { return payloadCase_ == PayloadOneofCase.Datetime ? (string)payload_ : ""; }
            set
            {
                payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                payloadCase_ = PayloadOneofCase.Datetime;
            }
        }

        /// <summary>Field number for the "sale" field.</summary>
        public const int SaleFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NetworkingProtoV3.Sale Sale
        {
            get { return payloadCase_ == PayloadOneofCase.Sale ? (global::NetworkingProtoV3.Sale)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Sale;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            User = 2,
            Username = 3,
            Datetime = 4,
            Sale = 5,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            if (!object.Equals(User, other.User)) return false;
            if (Username != other.Username) return false;
            if (Datetime != other.Datetime) return false;
            if (!object.Equals(Sale, other.Sale)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != global::NetworkingProtoV3.Request.Types.Type.Unknown) hash ^= Type.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.User) hash ^= User.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Username) hash ^= Username.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Datetime) hash ^= Datetime.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Sale) hash ^= Sale.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != global::NetworkingProtoV3.Request.Types.Type.Unknown)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (payloadCase_ == PayloadOneofCase.User)
            {
                output.WriteRawTag(18);
                output.WriteMessage(User);
            }
            if (payloadCase_ == PayloadOneofCase.Username)
            {
                output.WriteRawTag(26);
                output.WriteString(Username);
            }
            if (payloadCase_ == PayloadOneofCase.Datetime)
            {
                output.WriteRawTag(34);
                output.WriteString(Datetime);
            }
            if (payloadCase_ == PayloadOneofCase.Sale)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Sale);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != global::NetworkingProtoV3.Request.Types.Type.Unknown)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (payloadCase_ == PayloadOneofCase.User)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
            }
            if (payloadCase_ == PayloadOneofCase.Username)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
            }
            if (payloadCase_ == PayloadOneofCase.Datetime)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Datetime);
            }
            if (payloadCase_ == PayloadOneofCase.Sale)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != global::NetworkingProtoV3.Request.Types.Type.Unknown)
            {
                Type = other.Type;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.User:
                    if (User == null)
                    {
                        User = new global::NetworkingProtoV3.User();
                    }
                    User.MergeFrom(other.User);
                    break;
                case PayloadOneofCase.Username:
                    Username = other.Username;
                    break;
                case PayloadOneofCase.Datetime:
                    Datetime = other.Datetime;
                    break;
                case PayloadOneofCase.Sale:
                    if (Sale == null)
                    {
                        Sale = new global::NetworkingProtoV3.Sale();
                    }
                    Sale.MergeFrom(other.Sale);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Type = (global::NetworkingProtoV3.Request.Types.Type)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            global::NetworkingProtoV3.User subBuilder = new global::NetworkingProtoV3.User();
                            if (payloadCase_ == PayloadOneofCase.User)
                            {
                                subBuilder.MergeFrom(User);
                            }
                            input.ReadMessage(subBuilder);
                            User = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            Username = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            Datetime = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            global::NetworkingProtoV3.Sale subBuilder = new global::NetworkingProtoV3.Sale();
                            if (payloadCase_ == PayloadOneofCase.Sale)
                            {
                                subBuilder.MergeFrom(Sale);
                            }
                            input.ReadMessage(subBuilder);
                            Sale = subBuilder;
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Request message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("Unknown")] Unknown = 0,
                [pbr::OriginalName("Login")] Login = 1,
                [pbr::OriginalName("Logout")] Logout = 2,
                [pbr::OriginalName("FullShowList")] FullShowList = 3,
                [pbr::OriginalName("FilteredShowList")] FilteredShowList = 4,
                [pbr::OriginalName("AddSale")] AddSale = 5,
            }

        }
        #endregion

    }

    #endregion

}

#endregion Designer generated code
